name: 使用者管理
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users/statistics
    metadata:
      groupName: 使用者管理
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 使用者統計資料
      description: 取得使用者相關的統計資訊，包含總數、狀態分布、角色分布等
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      store_id:
        name: store_id
        description: 特定門市統計
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      period:
        name: period
        description: 統計期間（daily/weekly/monthly/yearly）
        required: false
        example: monthly
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      store_id: 1
      period: monthly
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "取得統計資料成功",
            "data": {
              "overview": {
                "total_users": 150,
                "active_users": 120,
                "inactive_users": 20,
                "locked_users": 5,
                "pending_users": 5
              },
              "by_store": [
                {
                  "store_id": 1,
                  "store_name": "總店",
                  "user_count": 80
                },
                {
                  "store_id": 2,
                  "store_name": "分店A",
                  "user_count": 45
                }
              ],
              "by_role": [
                {
                  "role_name": "staff",
                  "role_display_name": "員工",
                  "user_count": 100
                },
                {
                  "role_name": "manager",
                  "role_display_name": "管理員",
                  "user_count": 30
                }
              ],
              "trends": {
                "new_users_this_month": 15,
                "new_users_last_month": 12,
                "growth_rate": 25.0
              },
              "security": {
                "users_with_2fa": 75,
                "users_without_2fa": 75,
                "unverified_emails": 25
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "success": false,
            "message": "權限不足"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/users/batch-status
    metadata:
      groupName: 使用者管理
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 批次更新使用者狀態
      description: 批次啟用或停用多個使用者帳號
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_ids:
        name: user_ids
        description: 使用者ID陣列
        required: true
        example:
          - 1
          - 2
          - 3
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 目標狀態
        required: true
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      reason:
        name: reason
        description: 'Must not be greater than 500 characters.'
        required: false
        example: mqeopfuudtdsufvyvddqa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      send_notification:
        name: send_notification
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      force:
        name: force
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      user_ids:
        - 1
        - 2
        - 3
      status: null
      reason: mqeopfuudtdsufvyvddqa
      send_notification: true
      force: false
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "批次更新狀態成功",
            "data": {
              "affected_count": 3
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "success": false,
            "message": "權限不足"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "驗證失敗",
            "errors": {
              "user_ids": ["至少選擇一個使用者"],
              "status": ["狀態值無效"]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: 使用者管理
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 取得使用者列表
      description: 支援分頁、搜尋、篩選、排序等功能。具備門市隔離機制，非管理員僅能查看同門市使用者。
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 頁碼
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 每頁項目數（1-100）
        required: false
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      search:
        name: search
        description: 搜尋關鍵字（支援名稱、使用者名稱、信箱）
        required: false
        example: John
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      keyword:
        name: keyword
        description: 關鍵字搜尋
        required: false
        example: admin
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 使用者狀態篩選
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      store_id:
        name: store_id
        description: 門市ID篩選
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      role:
        name: role
        description: 角色篩選
        required: false
        example: staff
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      has_2fa:
        name: has_2fa
        description: 是否啟用雙因子驗證
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email_verified:
        name: email_verified
        description: 信箱是否已驗證
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      created_from:
        name: created_from
        description: 建立日期起始
        required: false
        example: '2025-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      created_to:
        name: created_to
        description: 建立日期結束
        required: false
        example: '2025-12-31'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      last_login_from:
        name: last_login_from
        description: 最後登入起始日期
        required: false
        example: '2025-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      last_login_to:
        name: last_login_to
        description: 最後登入結束日期
        required: false
        example: '2025-12-31'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort:
        name: sort
        description: 排序欄位
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      order:
        name: order
        description: 排序方向（asc/desc）
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      include:
        name: include
        description: 包含關聯資料
        required: false
        example: 'roles,store'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      with_count:
        name: with_count
        description: 是否包含統計計數
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 1
      per_page: 20
      search: John
      keyword: admin
      store_id: 1
      role: staff
      has_2fa: true
      email_verified: true
      created_from: '2025-01-01'
      created_to: '2025-12-31'
      last_login_from: '2025-01-01'
      last_login_to: '2025-12-31'
      include: 'roles,store'
      with_count: true
    bodyParameters:
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 73
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      cursor:
        name: cursor
        description: ''
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      search:
        name: search
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mqeopfuudtdsufvyvddqa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      keyword:
        name: keyword
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mniihfqcoynlazghdtqtq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: locked
        type: string
        enumValues:
          - active
          - inactive
          - locked
          - pending
        exampleWasSpecified: false
        nullable: true
        custom: []
      store_id:
        name: store_id
        description: 'The <code>id</code> of an existing record in the stores table.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      role:
        name: role
        description: 'The <code>name</code> of an existing record in the roles table.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      has_2fa:
        name: has_2fa
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      email_verified:
        name: email_verified
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      created_from:
        name: created_from
        description: 'Must be a valid date.'
        required: false
        example: '2025-06-05T13:05:08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      created_to:
        name: created_to
        description: 'Must be a valid date. Must be a date after or equal to <code>created_from</code>.'
        required: false
        example: '2106-07-05'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      last_login_from:
        name: last_login_from
        description: 'Must be a valid date.'
        required: false
        example: '2025-06-05T13:05:08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      last_login_to:
        name: last_login_to
        description: 'Must be a valid date. Must be a date after or equal to <code>last_login_from</code>.'
        required: false
        example: '2106-07-05'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: email
        type: string
        enumValues:
          - id
          - name
          - username
          - email
          - status
          - last_login_at
          - created_at
          - updated_at
        exampleWasSpecified: false
        nullable: true
        custom: []
      order:
        name: order
        description: ''
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: true
        custom: []
      include:
        name: include
        description: ''
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      with_count:
        name: with_count
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      page: 73
      per_page: 13
      cursor: consequatur
      search: mqeopfuudtdsufvyvddqa
      keyword: mniihfqcoynlazghdtqtq
      status: locked
      store_id: 17
      role: consequatur
      has_2fa: false
      email_verified: true
      created_from: '2025-06-05T13:05:08'
      created_to: '2106-07-05'
      last_login_from: '2025-06-05T13:05:08'
      last_login_to: '2106-07-05'
      sort: email
      order: desc
      include: consequatur
      with_count: true
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "取得使用者列表成功",
            "data": {
              "data": [
                {
                  "id": 1,
                  "username": "admin",
                  "name": "管理員",
                  "email": "admin@lomis.com",
                  "store_id": 1,
                  "phone": "0912345678",
                  "status": {
                    "value": "active",
                    "label": "啟用",
                    "color": "success",
                    "is_active": true
                  },
                  "email_verified_at": "2025-01-01T00:00:00.000000Z",
                  "is_email_verified": true,
                  "two_factor": {
                    "enabled": true,
                    "confirmed_at": "2025-01-01T00:00:00.000000Z"
                  },
                  "login_info": {
                    "last_login_at": "2025-01-07T10:00:00.000000Z",
                    "is_locked": false,
                    "locked_until": null
                  },
                  "roles": [
                    {
                      "id": 1,
                      "name": "admin",
                      "display_name": "管理員",
                      "level": 100,
                      "color": "primary"
                    }
                  ],
                  "avatar": {
                    "url": "https://example.com/avatars/1.jpg",
                    "thumbnail_url": "https://example.com/avatars/1-thumb.jpg",
                    "has_avatar": true
                  },
                  "audit": {
                    "created_at": "2025-01-01T00:00:00.000000Z",
                    "updated_at": "2025-01-07T10:00:00.000000Z"
                  }
                }
              ],
              "links": {
                "first": "http://localhost/api/users?page=1",
                "last": "http://localhost/api/users?page=10",
                "prev": null,
                "next": "http://localhost/api/users?page=2"
              },
              "meta": {
                "current_page": 1,
                "from": 1,
                "last_page": 10,
                "per_page": 20,
                "to": 20,
                "total": 200
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "success": false,
            "message": "權限不足"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "驗證失敗",
            "errors": {
              "per_page": ["每頁最多只能顯示 100 筆資料"]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      groupName: 使用者管理
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 建立使用者
      description: 建立新的使用者帳號。支援自動密碼生成、角色指派、門市隔離等功能。
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      username:
        name: username
        description: 使用者名稱（3-50字元，唯一）
        required: true
        example: john_doe
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name:
        name: name
        description: 姓名（2-100字元）
        required: true
        example: 約翰
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 電子信箱（唯一）
        required: true
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 密碼（8字元以上，包含大小寫字母、數字、符號）
        required: true
        example: SecurePass123!
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 確認密碼
        required: true
        example: SecurePass123!
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      store_id:
        name: store_id
        description: 所屬門市ID
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone:
        name: phone
        description: 手機號碼
        required: false
        example: '0912345678'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      status:
        name: status
        description: 使用者狀態（預設active）
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      roles:
        name: roles
        description: 角色陣列
        required: true
        example:
          - staff
          - manager
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      permissions:
        name: permissions
        description: 'The <code>name</code> of an existing record in the permissions table.'
        required: false
        example:
          - consequatur
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      preferences:
        name: preferences
        description: ''
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      enable_2fa:
        name: enable_2fa
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      send_welcome_email:
        name: send_welcome_email
        description: 是否發送歡迎信件（預設true）
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      username: john_doe
      name: 約翰
      email: john@example.com
      password: SecurePass123!
      password_confirmation: SecurePass123!
      store_id: 1
      phone: '0912345678'
      roles:
        - staff
        - manager
      permissions:
        - consequatur
      enable_2fa: true
      send_welcome_email: true
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "message": "建立使用者成功",
            "data": {
              "id": 25,
              "username": "john_doe",
              "name": "約翰",
              "email": "john@example.com",
              "phone": "0912345678",
              "store_id": 1,
              "status": {
                "value": "active",
                "label": "啟用",
                "color": "success",
                "is_active": true
              },
              "email_verified_at": null,
              "is_email_verified": false,
              "two_factor": {
                "enabled": false,
                "confirmed_at": null
              },
              "roles": [
                {
                  "id": 3,
                  "name": "staff",
                  "display_name": "員工",
                  "level": 40,
                  "color": "info"
                }
              ],
              "avatar": {
                "url": null,
                "thumbnail_url": null,
                "has_avatar": false
              },
              "audit": {
                "created_at": "2025-01-07T10:30:00.000000Z",
                "updated_at": "2025-01-07T10:30:00.000000Z"
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "success": false,
            "message": "建立使用者失敗：角色權限不足",
            "error_code": "USER_CREATE_FAILED"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "驗證失敗",
            "errors": {
              "username": ["使用者名稱已被使用"],
              "email": ["電子信箱已被使用"],
              "password": ["密碼強度不足"]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      groupName: 使用者管理
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 顯示使用者詳情
      description: 取得單一使用者的詳細資訊，包含角色、權限、門市、頭像、登入歷史等完整資料
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user:
        name: user
        description: 使用者ID
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 17
      user: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "取得使用者詳情成功",
            "data": {
              "id": 1,
              "username": "admin",
              "name": "管理員",
              "email": "admin@lomis.com",
              "store_id": 1,
              "store": {
                "id": 1,
                "name": "總店",
                "code": "STORE001"
              },
              "phone": "0912345678",
              "status": {
                "value": "active",
                "label": "啟用",
                "color": "success",
                "is_active": true
              },
              "email_verified_at": "2025-01-01T00:00:00.000000Z",
              "is_email_verified": true,
              "two_factor": {
                "enabled": true,
                "confirmed_at": "2025-01-01T00:00:00.000000Z"
              },
              "login_info": {
                "last_login_at": "2025-01-07T10:00:00.000000Z",
                "last_login_ip": "192.168.1.100",
                "login_attempts": 0,
                "is_locked": false,
                "locked_until": null
              },
              "roles": [
                {
                  "id": 1,
                  "name": "admin",
                  "display_name": "管理員",
                  "level": 100,
                  "color": "primary"
                }
              ],
              "permissions": ["users.view", "users.create", "users.update"],
              "avatar": {
                "url": "https://example.com/avatars/1.jpg",
                "thumbnail_url": "https://example.com/avatars/1-thumb.jpg",
                "has_avatar": true
              },
              "statistics": {
                "media_count": 5,
                "tokens_count": 3,
                "activities_count": 150,
                "created_users_count": 25
              },
              "audit": {
                "created_at": "2025-01-01T00:00:00.000000Z",
                "updated_at": "2025-01-07T10:00:00.000000Z",
                "created_by": {
                  "id": 1,
                  "name": "系統管理員"
                }
              },
              "actions": {
                "can_update": true,
                "can_delete": false,
                "can_reset_password": true,
                "can_toggle_2fa": true
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "success": false,
            "message": "權限不足"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "使用者不存在"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id}'
    metadata:
      groupName: 使用者管理
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 刪除使用者
      description: 軟刪除使用者帳號。刪除後使用者無法登入，但資料保留以供審計。
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user:
        name: user
        description: 使用者ID
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 17
      user: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "刪除使用者成功"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "success": false,
            "message": "權限不足"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "使用者不存在"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "無法刪除自己的帳號",
            "error_code": "USER_DELETE_FAILED"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/users/{user_id}/reset-password'
    metadata:
      groupName: 使用者管理
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 重設密碼
      description: 管理員重設使用者密碼，可選擇自動生成或指定密碼
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user:
        name: user
        description: 使用者ID
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 17
      user: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      password:
        name: password
        description: 新密碼（留空則自動生成）
        required: false
        example: NewPassword123!
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 確認密碼（當指定密碼時必填）
        required: false
        example: NewPassword123!
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      auto_generate:
        name: auto_generate
        description: 是否自動生成密碼（預設false）
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      send_email:
        name: send_email
        description: 是否發送密碼重設通知（預設true）
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      force_change:
        name: force_change
        description: 是否強制下次登入修改密碼（預設true）
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      password: NewPassword123!
      password_confirmation: NewPassword123!
      auto_generate: true
      send_email: true
      force_change: true
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "密碼重設成功",
            "data": {
              "password_sent_to_email": true,
              "temporary_password": "TempPass123!",
              "force_change_required": true
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "success": false,
            "message": "權限不足"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "使用者不存在"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "不能重設自己的密碼",
            "error_code": "PASSWORD_RESET_FAILED"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{user_id}/activities'
    metadata:
      groupName: 使用者管理
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 使用者活動記錄
      description: 取得使用者的操作活動記錄，支援分頁和篩選
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user:
        name: user
        description: 使用者ID
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 17
      user: 1
    queryParameters:
      page:
        name: page
        description: 頁碼
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 每頁項目數
        required: false
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      log_name:
        name: log_name
        description: 活動類型篩選
        required: false
        example: user_login
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      from_date:
        name: from_date
        description: 開始日期
        required: false
        example: '2025-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      to_date:
        name: to_date
        description: 結束日期
        required: false
        example: '2025-01-31'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 1
      per_page: 20
      log_name: user_login
      from_date: '2025-01-01'
      to_date: '2025-01-31'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "取得活動記錄成功",
            "data": {
              "data": [
                {
                  "id": 1,
                  "log_name": "user_login",
                  "description": "使用者登入成功",
                  "properties": {
                    "ip_address": "192.168.1.100",
                    "user_agent": "Mozilla/5.0...",
                    "device_name": "Chrome on Windows"
                  },
                  "created_at": "2025-01-07T10:00:00.000000Z"
                },
                {
                  "id": 2,
                  "log_name": "user_update",
                  "description": "使用者資料更新",
                  "properties": {
                    "updated_fields": ["name", "phone"],
                    "old_values": {"name": "舊名稱"},
                    "new_values": {"name": "新名稱"}
                  },
                  "created_at": "2025-01-07T09:30:00.000000Z"
                }
              ],
              "links": {
                "first": "http://localhost/api/users/1/activities?page=1",
                "last": "http://localhost/api/users/1/activities?page=5",
                "prev": null,
                "next": "http://localhost/api/users/1/activities?page=2"
              },
              "meta": {
                "current_page": 1,
                "from": 1,
                "last_page": 5,
                "per_page": 20,
                "to": 20,
                "total": 100
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "success": false,
            "message": "權限不足"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "使用者不存在"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{user_id}/avatar'
    metadata:
      groupName: 使用者管理
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 刪除使用者頭像
      description: 移除使用者的頭像圖片
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user:
        name: user
        description: 使用者ID
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 17
      user: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "頭像刪除成功"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "success": false,
            "message": "權限不足"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "使用者不存在"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "使用者沒有設定頭像",
            "error_code": "AVATAR_DELETE_FAILED"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
