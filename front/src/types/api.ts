/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 使用者登入 */
        post: operations["loginUser"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 使用者登出 */
        post: operations["logoutUser"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得當前登入的使用者資訊 */
        get: operations["getCurrentUser"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/2fa/challenge": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 二階段驗證 (2FA) */
        post: operations["twoFactorChallenge"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得使用者列表 (分頁) */
        get: operations["listUsers"];
        put?: never;
        /** 建立新使用者 */
        post: operations["createUser"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得單一使用者詳細資訊 */
        get: operations["getUserById"];
        /** 更新使用者資訊 */
        put: operations["updateUser"];
        post?: never;
        /** 刪除使用者 */
        delete: operations["deleteUser"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/batch/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** 批次更新使用者狀態 */
        patch: operations["batchUpdateUserStatus"];
        trace?: never;
    };
    "/api/users/{id}/reset-password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 重設使用者密碼 */
        post: operations["resetUserPassword"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/statistics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得使用者統計數據 */
        get: operations["getUserStatistics"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/product-categories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得商品分類列表 (分頁) */
        get: operations["listProductCategories"];
        put?: never;
        /** 建立新商品分類 */
        post: operations["createProductCategory"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/product-categories/tree": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得完整的商品分類樹狀結構 */
        get: operations["getProductCategoryTree"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/product-categories/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得單一商品分類資訊 */
        get: operations["getProductCategoryById"];
        /** 更新商品分類 */
        put: operations["updateProductCategory"];
        post?: never;
        /** 刪除商品分類 */
        delete: operations["deleteProductCategory"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/product-categories/batch/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** 批次更新商品分類狀態 */
        patch: operations["batchUpdateCategoryStatus"];
        trace?: never;
    };
    "/api/product-categories/batch/delete": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 批次刪除商品分類 */
        post: operations["batchDeleteCategories"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/product-categories/sort": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** 更新商品分類排序 */
        patch: operations["sortCategories"];
        trace?: never;
    };
    "/api/product-categories/{id}/breadcrumbs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得商品分類麵包屑 */
        get: operations["getCategoryBreadcrumbs"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/product-categories/{id}/descendants": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得一個分類的所有後代（樹狀） */
        get: operations["getCategoryDescendants"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/product-categories/statistics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得商品分類統計數據 */
        get: operations["getCategoryStatistics"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @description 使用者核心資料模型 */
        User: {
            /** @description ID */
            id?: number;
            /** @description 姓名 */
            name?: string;
            /** @description 用戶名 */
            username?: string;
            /**
             * Format: email
             * @description 電子郵件
             */
            email?: string;
            phone?: string | null;
            /** Format: uri */
            avatar?: string | null;
            /** @enum {string} */
            status?: "active" | "inactive" | "suspended";
            /** Format: date-time */
            email_verified_at?: string | null;
            two_factor_enabled?: boolean;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
            store?: components["schemas"]["Store"];
            roles?: components["schemas"]["Role"][];
        };
        /** @description 門市資料模型 */
        Store: {
            id?: number;
            name?: string;
        };
        /** @description 角色資料模型 */
        Role: {
            id?: number;
            /** @description 角色內部名稱 (e.g. admin) */
            name?: string;
            /** @description 角色顯示名稱 (e.g. 系統管理員) */
            display_name?: string;
        };
        /** @description 商品分類模型 */
        ProductCategory: {
            id?: number;
            name?: string;
            slug?: string;
            description?: string | null;
            parent_id?: number | null;
            status?: boolean;
            position?: number;
            depth?: number;
            children_count?: number;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
            children?: components["schemas"]["ProductCategory"][];
        };
        PaginationLinks: {
            /** Format: uri */
            first?: string | null;
            /** Format: uri */
            last?: string | null;
            /** Format: uri */
            prev?: string | null;
            /** Format: uri */
            next?: string | null;
        };
        PaginationMeta: {
            current_page?: number;
            from?: number | null;
            last_page?: number;
            /** Format: uri */
            path?: string;
            per_page?: number;
            to?: number | null;
            total?: number;
        };
        LoginRequest: {
            /** Format: email */
            email: string;
            password: string;
            remember?: boolean;
        };
        LoginResponse: {
            token?: string;
            user?: components["schemas"]["User"];
            /** @description 是否需要二階段驗證 */
            two_factor?: boolean;
        };
        AuthenticatedUserResponse: {
            data?: components["schemas"]["User"];
        };
        TwoFactorChallengeRequest: {
            code?: string;
            recovery_code?: string;
        };
        UserResponse: {
            data?: components["schemas"]["User"];
        };
        PaginatedUsersResponse: {
            data?: components["schemas"]["User"][];
            links?: components["schemas"]["PaginationLinks"];
            meta?: components["schemas"]["PaginationMeta"];
        };
        CreateUserRequest: {
            name: string;
            username: string;
            /** Format: email */
            email: string;
            /** Format: password */
            password: string;
            /** Format: password */
            password_confirmation: string;
            phone?: string;
            store_id: number;
            role_ids: number[];
            /** @enum {string} */
            status: "active" | "inactive";
        };
        UpdateUserRequest: {
            name?: string;
            username?: string;
            /** Format: email */
            email?: string;
            /**
             * Format: password
             * @description 僅在需要更改密碼時提供
             */
            password?: string;
            /** Format: password */
            password_confirmation?: string;
            phone?: string;
            store_id?: number;
            role_ids?: number[];
            /** @enum {string} */
            status?: "active" | "inactive" | "suspended";
        };
        BatchStatusUserRequest: {
            ids: number[];
            /** @enum {string} */
            status: "active" | "inactive" | "suspended";
        };
        UserStatsResponse: {
            data?: components["schemas"]["UserStatsData"];
        };
        UserStatsData: {
            counts?: components["schemas"]["UserCounts"];
            two_factor?: components["schemas"]["TwoFactorStats"];
            activity?: components["schemas"]["UserActivityStats"];
        };
        UserCounts: {
            total?: number;
            active?: number;
            inactive?: number;
            suspended?: number;
        };
        TwoFactorStats: {
            enabled?: number;
            disabled?: number;
        };
        UserActivityStats: {
            new_this_week?: number;
            logins_today?: number;
        };
        CategoryResponse: {
            data?: components["schemas"]["ProductCategory"];
        };
        CategoryTreeResponse: {
            data?: components["schemas"]["ProductCategory"][];
        };
        PaginatedCategoriesResponse: {
            data?: components["schemas"]["ProductCategory"][];
            links?: {
                /** Format: url */
                first?: string | null;
                /** Format: url */
                last?: string | null;
                /** Format: url */
                prev?: string | null;
                /** Format: url */
                next?: string | null;
            };
            meta?: {
                current_page?: number;
                from?: number | null;
                last_page?: number;
                /** Format: url */
                path?: string;
                per_page?: number;
                to?: number | null;
                total?: number;
            };
        };
        CategoryStatsResponse: {
            data?: components["schemas"]["CategoryStatsData"];
        };
        CategoryStatsData: {
            /** @description 總分類數 */
            total?: number;
            /** @description 啟用分類數 */
            active?: number;
            /** @description 停用分類數 */
            inactive?: number;
            /** @description 最大層級深度 */
            max_depth?: number;
            /** @description 根節點數量 */
            root_nodes?: number;
        };
        BreadcrumbResponse: {
            data?: {
                id?: number;
                name?: string;
            }[];
        };
        CreateCategoryRequest: {
            name: string;
            slug?: string | null;
            description?: string | null;
            parent_id?: number | null;
            status: boolean;
        };
        UpdateCategoryRequest: {
            name?: string;
            slug?: string | null;
            description?: string | null;
            parent_id?: number | null;
            status?: boolean;
        };
        SortCategoriesRequest: {
            categories: {
                id?: number;
                position?: number;
                parent_id?: number | null;
            }[];
        };
        BatchStatusCategoriesRequest: {
            ids: number[];
            status: boolean;
        };
        SuccessResponse: {
            /** @example true */
            success?: boolean;
            /** @example 操作成功 */
            message?: string;
        };
        ErrorResponse: {
            /** @example false */
            success?: boolean;
            /** @example 資源不存在 */
            message?: string;
            /** @example NOT_FOUND */
            code?: string;
        };
        ValidationErrorResponse: {
            /** @example 給定的資料有誤 */
            message?: string;
            /** @example {
             *       "email": [
             *         "電子郵件格式不正確"
             *       ]
             *     } */
            errors?: {
                [key: string]: string[];
            };
        };
    };
    responses: {
        /** @description 操作成功 */
        Success: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["SuccessResponse"];
            };
        };
        /** @description 找不到資源 */
        NotFound: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["ErrorResponse"];
            };
        };
        /** @description 權限不足 */
        Forbidden: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["ErrorResponse"];
            };
        };
        /** @description 未認證 */
        Unauthorized: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["ErrorResponse"];
            };
        };
        /** @description 驗證失敗 */
        ValidationError: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["ValidationErrorResponse"];
            };
        };
    };
    parameters: never;
    requestBodies: {
        CreateUserRequest: {
            content: {
                "application/json": components["schemas"]["CreateUserRequest"];
            };
        };
        UpdateUserRequest: {
            content: {
                "application/json": components["schemas"]["UpdateUserRequest"];
            };
        };
        CreateCategoryRequest: {
            content: {
                "application/json": components["schemas"]["CreateCategoryRequest"];
            };
        };
        UpdateCategoryRequest: {
            content: {
                "application/json": components["schemas"]["UpdateCategoryRequest"];
            };
        };
        SortCategoriesRequest: {
            content: {
                "application/json": components["schemas"]["SortCategoriesRequest"];
            };
        };
    };
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    loginUser: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoginRequest"];
            };
        };
        responses: {
            /** @description 登入成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LoginResponse"];
                };
            };
            401: components["responses"]["Unauthorized"];
            422: components["responses"]["ValidationError"];
        };
    };
    logoutUser: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功登出 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            401: components["responses"]["Unauthorized"];
        };
    };
    getCurrentUser: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得使用者資訊 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AuthenticatedUserResponse"];
                };
            };
            401: components["responses"]["Unauthorized"];
        };
    };
    twoFactorChallenge: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TwoFactorChallengeRequest"];
            };
        };
        responses: {
            /** @description 2FA 驗證成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SuccessResponse"];
                };
            };
            422: components["responses"]["ValidationError"];
        };
    };
    listUsers: {
        parameters: {
            query?: {
                /** @description 頁碼 */
                page?: number;
                /** @description 每頁數量 */
                per_page?: number;
                /** @description 關鍵字搜尋 (姓名, 用戶名, email) */
                search?: string;
                /** @description 狀態篩選 */
                status?: "active" | "inactive" | "suspended";
                /** @description 門市 ID 篩選 */
                store_id?: number;
                /** @description 角色名稱篩選 */
                role?: string;
                /** @description 是否啟用 2FA */
                has_2fa?: boolean;
                /** @description 是否驗證 Email */
                email_verified?: boolean;
                /** @description 建立日期 (起) */
                created_from?: string;
                /** @description 建立日期 (迄) */
                created_to?: string;
                /** @description 排序欄位 */
                sort?: "name" | "email" | "created_at";
                /** @description 排序方向 */
                order?: "asc" | "desc";
                /** @description 包含的關聯 (e.g., roles,store) */
                include?: string;
                /** @description 包含的計數關聯 (e.g., logs) */
                with_count?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得使用者列表 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedUsersResponse"];
                };
            };
            403: components["responses"]["Forbidden"];
        };
    };
    createUser: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: components["requestBodies"]["CreateUserRequest"];
        responses: {
            /** @description 成功建立使用者 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserResponse"];
                };
            };
            422: components["responses"]["ValidationError"];
        };
    };
    getUserById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 使用者 ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得使用者資訊 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserResponse"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    updateUser: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 使用者 ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody: components["requestBodies"]["UpdateUserRequest"];
        responses: {
            /** @description 成功更新使用者資訊 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserResponse"];
                };
            };
            404: components["responses"]["NotFound"];
            422: components["responses"]["ValidationError"];
        };
    };
    deleteUser: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 使用者 ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功刪除 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            404: components["responses"]["NotFound"];
        };
    };
    batchUpdateUserStatus: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BatchStatusUserRequest"];
            };
        };
        responses: {
            200: components["responses"]["Success"];
            422: components["responses"]["ValidationError"];
        };
    };
    resetUserPassword: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 使用者 ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功發送密碼重設郵件 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SuccessResponse"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    getUserStatistics: {
        parameters: {
            query?: {
                /** @description 依門市 ID 篩選 */
                store_id?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得統計數據 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserStatsResponse"];
                };
            };
        };
    };
    listProductCategories: {
        parameters: {
            query?: {
                page?: number;
                per_page?: number;
                /** @description 名稱或 slug 搜尋 */
                search?: string;
                /** @description 狀態篩選 (true=啟用, false=停用) */
                status?: boolean;
                /** @description 父分類 ID */
                parent_id?: number;
                sort?: "name" | "position" | "created_at";
                direction?: "asc" | "desc";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得列表 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedCategoriesResponse"];
                };
            };
        };
    };
    createProductCategory: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: components["requestBodies"]["CreateCategoryRequest"];
        responses: {
            /** @description 成功建立 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CategoryResponse"];
                };
            };
            422: components["responses"]["ValidationError"];
        };
    };
    getProductCategoryTree: {
        parameters: {
            query?: {
                /** @description 狀態篩選 */
                status?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得樹狀結構 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CategoryTreeResponse"];
                };
            };
        };
    };
    getProductCategoryById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CategoryResponse"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    updateProductCategory: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: components["requestBodies"]["UpdateCategoryRequest"];
        responses: {
            /** @description 成功更新 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CategoryResponse"];
                };
            };
            404: components["responses"]["NotFound"];
            422: components["responses"]["ValidationError"];
        };
    };
    deleteProductCategory: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功刪除 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            404: components["responses"]["NotFound"];
        };
    };
    batchUpdateCategoryStatus: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BatchStatusCategoriesRequest"];
            };
        };
        responses: {
            200: components["responses"]["Success"];
            422: components["responses"]["ValidationError"];
        };
    };
    batchDeleteCategories: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description 要刪除的分類 ID 列表 */
                    ids?: number[];
                };
            };
        };
        responses: {
            200: components["responses"]["Success"];
        };
    };
    sortCategories: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: components["requestBodies"]["SortCategoriesRequest"];
        responses: {
            200: components["responses"]["Success"];
        };
    };
    getCategoryBreadcrumbs: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得麵包屑 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BreadcrumbResponse"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    getCategoryDescendants: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得後代 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CategoryTreeResponse"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    getCategoryStatistics: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得統計數據 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CategoryStatsResponse"];
                };
            };
        };
    };
}
